{"version":3,"sources":["webpack:///./node_modules/u2f-api/dist/lib/u2f-api.js","webpack:///./node_modules/u2f-api/dist/index.js","webpack:///./src/views/u2f/show.vue?b69e","webpack:///./src/views/u2f/show.vue?4227","webpack:///src/views/u2f/show.vue","webpack:///./src/views/u2f/show.vue?5d21","webpack:///./src/views/u2f/show.vue","webpack:///./node_modules/u2f-api/dist/lib/generated-google-u2f-api.js"],"names":["Object","defineProperty","exports","value","chromeApi","__webpack_require__","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","supportChecker","Promise","resolve","reject","notSupported","u2f","hasNativeSupport","window","sign","location","protocol","MessageChannel","isSupported","ok","then","response","makeError","msg","err","code","errorCode","type","ErrorNames","error","Error","metaData","backend","_ensureSupport","ensureSupport","arrayify","Array","isArray","slice","register","registerRequests","signRequests","timeout","_registerRequests","_signRequests","callback","appId","challenge","registeredKeys","map","_a","version","keyHandle","ErrorCodes","OK","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","0","1","2","3","4","5","__export","m","p","hasOwnProperty","u2fApi","default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_show_vue_vue_type_style_index_0_id_3564bffa_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_show_vue_vue_type_style_index_0_id_3564bffa_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","attrs","span","offset","staticClass","slot","_v","src","alt","size","on","click","u2fregister","name","id","readonly","domProps","textContent","_s","regreq","clientgeneratekeys","reqclientgeneratekey","u2fendregister","regresponse","u2fauth","authreq","authclientsign","authclientsignresult","u2fendrauth","authresponse","staticRenderFns","showvue_type_script_lang_js_","data","methods","_this","console","log","axios_default","a","get","res","catch","alert","_this2","registrationRequest","dist_default","registrationResponse","_this3","post","_this4","_this5","authRequest","authResponse","_this6","mounted","u2f_showvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","js_api_version","module","EXTENSION_ID","MessageTypes","U2F_REGISTER_REQUEST","U2F_REGISTER_RESPONSE","U2F_SIGN_REQUEST","U2F_SIGN_RESPONSE","U2F_GET_API_VERSION_REQUEST","U2F_GET_API_VERSION_RESPONSE","U2fRequest","U2fResponse","Transport","Transports","SignRequest","SignResponse","RegisterRequest","RegisterResponse","RegisteredKey","GetJsApiVersionResponse","getMessagePort","chrome","runtime","sendMessage","lastError","getIframePort_","getChromeRuntimePort_","isAndroidChrome_","getAuthenticatorPort_","isIosChrome_","getIosPort_","indexOf","platform","port","connect","includeTlsChannelId","setTimeout","WrappedChromeRuntimePort_","WrappedAuthenticatorPort_","WrappedIosPort_","port_","formatSignRequest_","timeoutSeconds","reqId","undefined","i","length","requestId","formatRegisterRequest_","prototype","postMessage","message","addEventListener","eventName","handler","toLowerCase","onMessage","addListener","requestId_","requestObject_","intentUrl","INTENT_URL_BASE_","encodeURIComponent","JSON","stringify","document","getPortType","self","onRequestUpdate_","bind","messageObject","parse","responseObject","str","url","encodeURI","replace","iframeOrigin","iframe","createElement","setAttribute","body","appendChild","channel","ready","port1","removeEventListener","start","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","shift","push","responseHandler_","cb","hasCalledBack","reply","getApiVersion","opt_timeoutSeconds","sendSignRequest","req","sendRegisterRequest","apiVersion"],"mappings":"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","file":"js/chunk-53196a64.d24baae2.js","sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chromeApi = require(\"./generated-google-u2f-api\");\n// Feature detection (yes really)\nvar isBrowser = (typeof navigator !== 'undefined') && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match(/Safari\\//)\n    && !navigator.userAgent.match(/Chrome\\//);\nvar isEDGE = isBrowser && navigator.userAgent.match(/Edge\\/1[2345]/);\nvar _backend = null;\nfunction getBackend() {\n    if (_backend)\n        return _backend;\n    var supportChecker = new Promise(function (resolve, reject) {\n        function notSupported() {\n            resolve({ u2f: null });\n        }\n        if (!isBrowser)\n            return notSupported();\n        if (isSafari)\n            // Safari doesn't support U2F, and the Safari-FIDO-U2F\n            // extension lacks full support (Multi-facet apps), so we\n            // block it until proper support.\n            return notSupported();\n        var hasNativeSupport = (typeof window.u2f !== 'undefined') &&\n            (typeof window.u2f.sign === 'function');\n        if (hasNativeSupport)\n            return resolve({ u2f: window.u2f });\n        if (isEDGE)\n            // We don't want to check for Google's extension hack on EDGE\n            // as it'll cause trouble (popups, etc)\n            return notSupported();\n        if (location.protocol === 'http:')\n            // U2F isn't supported over http, only https\n            return notSupported();\n        if (typeof MessageChannel === 'undefined')\n            // Unsupported browser, the chrome hack would throw\n            return notSupported();\n        // Test for google extension support\n        chromeApi.isSupported(function (ok) {\n            if (ok)\n                resolve({ u2f: chromeApi });\n            else\n                notSupported();\n        });\n    })\n        .then(function (response) {\n        _backend = response.u2f ? supportChecker : null;\n        return response;\n    });\n    return supportChecker;\n}\nexports.ErrorCodes = {\n    OK: 0,\n    OTHER_ERROR: 1,\n    BAD_REQUEST: 2,\n    CONFIGURATION_UNSUPPORTED: 3,\n    DEVICE_INELIGIBLE: 4,\n    TIMEOUT: 5\n};\nexports.ErrorNames = {\n    \"0\": \"OK\",\n    \"1\": \"OTHER_ERROR\",\n    \"2\": \"BAD_REQUEST\",\n    \"3\": \"CONFIGURATION_UNSUPPORTED\",\n    \"4\": \"DEVICE_INELIGIBLE\",\n    \"5\": \"TIMEOUT\"\n};\nfunction makeError(msg, err) {\n    var code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n    var type = exports.ErrorNames['' + code];\n    var error = new Error(msg);\n    error.metaData = { type: type, code: code };\n    return error;\n}\nfunction isSupported() {\n    return getBackend()\n        .then(function (backend) { return !!backend.u2f; });\n}\nexports.isSupported = isSupported;\nfunction _ensureSupport(backend) {\n    if (!backend.u2f) {\n        if (location.protocol === 'http:')\n            throw new Error(\"U2F isn't supported over http, only https\");\n        throw new Error(\"U2F not supported\");\n    }\n}\nfunction ensureSupport() {\n    return getBackend()\n        .then(_ensureSupport);\n}\nexports.ensureSupport = ensureSupport;\nfunction arrayify(value) {\n    if (value != null && Array.isArray(value))\n        return value;\n    return value == null\n        ? []\n        : Array.isArray(value)\n            ? value.slice() : [value];\n}\nfunction register(registerRequests, signRequests, timeout) {\n    var _registerRequests = arrayify(registerRequests);\n    if (typeof signRequests === 'number' && typeof timeout === 'undefined') {\n        timeout = signRequests;\n        signRequests = null;\n    }\n    var _signRequests = arrayify(signRequests);\n    return getBackend()\n        .then(function (backend) {\n        _ensureSupport(backend);\n        var u2f = backend.u2f;\n        return new Promise(function (resolve, reject) {\n            function callback(response) {\n                if (response.errorCode)\n                    reject(makeError(\"Registration failed\", response));\n                else {\n                    delete response.errorCode;\n                    resolve(response);\n                }\n            }\n            var appId = _registerRequests[0].appId;\n            u2f.register(appId, _registerRequests, _signRequests, callback, timeout);\n        });\n    });\n}\nexports.register = register;\nfunction sign(signRequests, timeout) {\n    var _signRequests = arrayify(signRequests);\n    return getBackend()\n        .then(function (backend) {\n        _ensureSupport(backend);\n        var u2f = backend.u2f;\n        return new Promise(function (resolve, reject) {\n            function callback(response) {\n                if (response.errorCode)\n                    reject(makeError(\"Sign failed\", response));\n                else {\n                    delete response.errorCode;\n                    resolve(response);\n                }\n            }\n            var appId = _signRequests[0].appId;\n            var challenge = _signRequests[0].challenge;\n            var registeredKeys = _signRequests\n                .map(function (_a) {\n                var version = _a.version, keyHandle = _a.keyHandle, appId = _a.appId;\n                return ({ version: version, keyHandle: keyHandle, appId: appId });\n            });\n            u2f.sign(appId, challenge, registeredKeys, callback, timeout);\n        });\n    });\n}\nexports.sign = sign;\n//# sourceMappingURL=u2f-api.js.map","'use strict';\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar u2fApi = require(\"./lib/u2f-api\");\n__export(require(\"./lib/u2f-api\"));\nexports.default = u2fApi;\n//# sourceMappingURL=index.js.map","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=style&index=0&id=3564bffa&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=style&index=0&id=3564bffa&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('h3',[_vm._v(\"FIDO U2F register\")])]),_c('img',{attrs:{\"src\":\"/images/u2freg.png\",\"alt\":\"\"}})])],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.u2fregister}},[_vm._v(\" 从服务器获取注册申请信息\")])],1),_c('span',[_vm._v(\"req data:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.regreq)}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('br'),_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.clientgeneratekeys}},[_vm._v(\" 客户端生成新的公私钥等信息\")])],1),_c('span',[_vm._v(\"客户端生成key 等信息:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.reqclientgeneratekey)}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('br'),_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.u2fendregister}},[_vm._v(\" 完成注册\")])],1),_c('span',[_vm._v(\"服务器返回的信息\\n                \"),_c('br'),_vm._v(\"（public key 和 key handler 不需要返回 这里用于调试）:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.regresponse)}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('h3',[_vm._v(\"FIDO U2F login\")])]),_c('img',{attrs:{\"src\":\"/images/u2flogin.png\",\"alt\":\"\"}})])],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.u2fauth}},[_vm._v(\" 从服务器获取某用户的keyhandler\")])],1),_c('span',[_vm._v(\"req data:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.authreq)}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('br'),_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.authclientsign}},[_vm._v(\" 客户端对chanlleage进行签名\")])],1),_c('span',[_vm._v(\"客户端针对本次认证生成的签名信息:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.authclientsignresult)}})],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":18,\"offset\":3}},[_c('br'),_c('center',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.u2fendrauth}},[_vm._v(\" 完成认证\")])],1),_c('span',[_vm._v(\"服务器返回的信息:\")]),_c('br'),_c('textarea',{attrs:{\"name\":\"\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"textContent\":_vm._s(_vm.authresponse)}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>    \r\n    <div>\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <el-card class=\"box-card\">\r\n                    <div slot=\"header\">\r\n                        <h3>FIDO U2F register</h3>\r\n                    </div>\r\n                    <img src=\"/images/u2freg.png\" alt=\"\">\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">            \r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"u2fregister\"> 从服务器获取注册申请信息</el-button>\r\n                </center>\r\n\r\n                <span>req data:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"regreq\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <br>\r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"clientgeneratekeys\"> 客户端生成新的公私钥等信息</el-button>\r\n                </center>\r\n                <span>客户端生成key 等信息:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"reqclientgeneratekey\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <br>\r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"u2fendregister\"> 完成注册</el-button>\r\n                </center>\r\n                <span>服务器返回的信息\r\n                    <br>（public key 和 key handler 不需要返回 这里用于调试）:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"regresponse\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <el-card class=\"box-card\">\r\n                    <div slot=\"header\">\r\n                        <h3>FIDO U2F login</h3>\r\n                    </div>\r\n                    <img src=\"/images/u2flogin.png\" alt=\"\">\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n\r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"u2fauth\"> 从服务器获取某用户的keyhandler</el-button>\r\n                </center>\r\n\r\n                <span>req data:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"authreq\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <br>\r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"authclientsign\"> 客户端对chanlleage进行签名</el-button>\r\n                </center>\r\n                <span>客户端针对本次认证生成的签名信息:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"authclientsignresult\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row>\r\n            <el-col :span=\"18\" :offset=\"3\">\r\n                <br>\r\n                <center>\r\n                    <el-button type=\"primary\" size=\"medium\" @click=\"u2fendrauth\"> 完成认证</el-button>\r\n                </center>\r\n                <span>服务器返回的信息:</span>\r\n                <br>\r\n                <textarea name=\"\" id=\"\" readonly v-text=\"authresponse\"></textarea>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport u2fApi from \"u2f-api\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      regreq: \"test\",\r\n      reqclientgeneratekey: \"test2\",\r\n      regresponse: \"test3\",\r\n\r\n      authreq: \"test4\",\r\n      authclientsignresult: \"test5\",\r\n      authresponse: \"test6\"\r\n    };\r\n  },\r\n  methods: {\r\n    u2fregister() {\r\n      console.log(\"u2fregister\");\r\n      axios\r\n        .get(\"https://172.16.64.92:4430/u2f/reg\")\r\n        .then(res => {\r\n          //const registrationRequest = res.data.registrationRequest\r\n          // Retrieve this from hitting the registration challenge endpoint\r\n          this.regreq = res.data;\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        });\r\n    },\r\n    // next\r\n    clientgeneratekeys() {\r\n      alert(\"please insert u2f key，灯闪烁的时候，用手指触摸卡上的金属区域\");\r\n      console.log(\"u2f device over register\");\r\n      const registrationRequest = this.regreq.registrationRequest;\r\n      u2fApi.register(\r\n        registrationRequest\r\n      ).then(registrationResponse => {\r\n          console.log(\"u2f device over register\");\r\n          this.reqclientgeneratekey = registrationResponse;\r\n        })\r\n      .catch(err=>{\r\n          alert(err)\r\n      });\r\n    },\r\n\r\n    u2fendregister() {\r\n      // Send this registration response to the registration verification server endpoint\r\n      let registrationResponse = this.reqclientgeneratekey;\r\n      axios\r\n        .post(\"https://172.16.64.92:4430/u2f/reg\", { registrationResponse })\r\n        .then(res => {\r\n          this.regresponse = res.data;\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert(err);\r\n        });\r\n    },\r\n\r\n    u2fauth() {\r\n      axios\r\n        .get(\"https://172.16.64.92:4430/u2f/auth\")\r\n        .then(res => {\r\n          //const registrationRequest = res.data.registrationRequest\r\n          // Retrieve this from hitting the registration challenge endpoint\r\n          this.authreq = res.data;\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        });\r\n    },\r\n    authclientsign() {\r\n      alert(\"please insert u2f key，灯闪烁的时候，用手指触摸卡上的金属区域\");\r\n      const authRequest = this.authreq.authRequest;\r\n      // Retrieve this from hitting the authentication challenge endpoint\r\n      u2fApi.sign(\r\n        authRequest\r\n      ).then(authResponse => {\r\n          // Send this authentication response to the authentication verification server endpoint\r\n          this.authclientsignresult = authResponse;\r\n        })\r\n      .catch(err => {\r\n          alert(err);\r\n        });\r\n    },\r\n    u2fendrauth() {\r\n      let authResponse = this.authclientsignresult;\r\n      axios\r\n        .post(\"https://172.16.64.92:4430/u2f/auth\", { authResponse })\r\n        .then(res => {\r\n          this.authresponse = res.data;\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert(err);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log(\"ok\");\r\n    /*this.$message({\r\n          showClose: true,\r\n          message: '恭喜你，这是一条成功消息',\r\n          type: 'success'\r\n        });*/\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntextarea {\r\n  width: 100%;\r\n  height: 400px;\r\n  resize: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./show.vue?vue&type=template&id=3564bffa&scoped=true&\"\nimport script from \"./show.vue?vue&type=script&lang=js&\"\nexport * from \"./show.vue?vue&type=script&lang=js&\"\nimport style0 from \"./show.vue?vue&type=style&index=0&id=3564bffa&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3564bffa\",\n  null\n  \n)\n\nexport default component.exports","//Copyright 2014-2015 Google Inc. All rights reserved.\n\n//Use of this source code is governed by a BSD-style\n//license that can be found in the LICENSE file or at\n//https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n'use strict';\n\n\n/**\n * Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * FIDO U2F Javascript API Version\n * @number\n */\nvar js_api_version;\n\n/**\n * The U2F extension id\n * @const {string}\n */\n// The Chrome packaged app extension ID.\n// Uncomment this if you want to deploy a server instance that uses\n// the package Chrome app and does not require installing the U2F Chrome extension.\n u2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n// The U2F Chrome extension ID.\n// Uncomment this if you want to deploy a server instance that uses\n// the U2F Chrome extension to authenticate.\n// u2f.EXTENSION_ID = 'pfboblefjcgdjicmnffhdgionmgcdmne';\n\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n    'U2F_REGISTER_REQUEST': 'u2f_register_request',\n    'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n    'U2F_SIGN_REQUEST': 'u2f_sign_request',\n    'U2F_SIGN_RESPONSE': 'u2f_sign_response',\n    'U2F_GET_API_VERSION_REQUEST': 'u2f_get_api_version_request',\n    'U2F_GET_API_VERSION_RESPONSE': 'u2f_get_api_version_response'\n};\n\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n    'OK': 0,\n    'OTHER_ERROR': 1,\n    'BAD_REQUEST': 2,\n    'CONFIGURATION_UNSUPPORTED': 3,\n    'DEVICE_INELIGIBLE': 4,\n    'TIMEOUT': 5\n};\n\n\n/**\n * A message for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   appId: ?string,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.U2fRequest;\n\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.U2fResponse;\n\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {enum {BLUETOOTH_RADIO, BLUETOOTH_LOW_ENERGY, USB, NFC, USB_INTERNAL}}\n */\nu2f.Transport;\n\n\n/**\n * Data object for a single sign request.\n * @typedef {Array<u2f.Transport>}\n */\nu2f.Transports;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string\n * }}\n */\nu2f.RegisterRequest;\n\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   version: string,\n *   keyHandle: string,\n *   transports: Transports,\n *   appId: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n/**\n * Data object for a registered key.\n * @typedef {{\n *   version: string,\n *   keyHandle: string,\n *   transports: ?Transports,\n *   appId: ?string\n * }}\n */\nu2f.RegisteredKey;\n\n\n/**\n * Data object for a get API register response.\n * @typedef {{\n *   js_api_version: number\n * }}\n */\nu2f.GetJsApiVersionResponse;\n\n\n//Low level MessagePort API support\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n        type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n        signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else if (u2f.isAndroidChrome_()) {\n    u2f.getAuthenticatorPort_(callback);\n  } else if (u2f.isIosChrome_()) {\n    u2f.getIosPort_(callback);\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Detect chrome running on android based on the browser's useragent.\n * @private\n */\nu2f.isAndroidChrome_ = function() {\n  var userAgent = navigator.userAgent;\n  return userAgent.indexOf('Chrome') != -1 &&\n  userAgent.indexOf('Android') != -1;\n};\n\n/**\n * Detect chrome running on iOS based on the browser's platform.\n * @private\n */\nu2f.isIosChrome_ = function() {\n  return [\"iPhone\", \"iPad\", \"iPod\"].indexOf(navigator.platform) > -1;\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect.\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n      {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * Return a 'port' abstraction to the Authenticator app.\n * @param {function(u2f.WrappedAuthenticatorPort_)} callback\n * @private\n */\nu2f.getAuthenticatorPort_ = function(callback) {\n  setTimeout(function() {\n    callback(new u2f.WrappedAuthenticatorPort_());\n  }, 0);\n};\n\n/**\n * Return a 'port' abstraction to the iOS client app.\n * @param {function(u2f.WrappedIosPort_)} callback\n * @private\n */\nu2f.getIosPort_ = function(callback) {\n  setTimeout(function() {\n    callback(new u2f.WrappedIosPort_());\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Format and return a sign request compliant with the JS API version supported by the extension.\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {number} timeoutSeconds\n * @param {number} reqId\n * @return {Object}\n */\nu2f.formatSignRequest_ =\n  function(appId, challenge, registeredKeys, timeoutSeconds, reqId) {\n  if (js_api_version === undefined || js_api_version < 1.1) {\n    // Adapt request to the 1.0 JS API\n    var signRequests = [];\n    for (var i = 0; i < registeredKeys.length; i++) {\n      signRequests[i] = {\n          version: registeredKeys[i].version,\n          challenge: challenge,\n          keyHandle: registeredKeys[i].keyHandle,\n          appId: appId\n      };\n    }\n    return {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: timeoutSeconds,\n      requestId: reqId\n    };\n  }\n  // JS 1.1 API\n  return {\n    type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n    appId: appId,\n    challenge: challenge,\n    registeredKeys: registeredKeys,\n    timeoutSeconds: timeoutSeconds,\n    requestId: reqId\n  };\n};\n\n/**\n * Format and return a register request compliant with the JS API version supported by the extension..\n * @param {Array<u2f.SignRequest>} signRequests\n * @param {Array<u2f.RegisterRequest>} signRequests\n * @param {number} timeoutSeconds\n * @param {number} reqId\n * @return {Object}\n */\nu2f.formatRegisterRequest_ =\n  function(appId, registeredKeys, registerRequests, timeoutSeconds, reqId) {\n  if (js_api_version === undefined || js_api_version < 1.1) {\n    // Adapt request to the 1.0 JS API\n    for (var i = 0; i < registerRequests.length; i++) {\n      registerRequests[i].appId = appId;\n    }\n    var signRequests = [];\n    for (var i = 0; i < registeredKeys.length; i++) {\n      signRequests[i] = {\n          version: registeredKeys[i].version,\n          challenge: registerRequests[0],\n          keyHandle: registeredKeys[i].keyHandle,\n          appId: appId\n      };\n    }\n    return {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: timeoutSeconds,\n      requestId: reqId\n    };\n  }\n  // JS 1.1 API\n  return {\n    type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n    appId: appId,\n    registerRequests: registerRequests,\n    registeredKeys: registeredKeys,\n    timeoutSeconds: timeoutSeconds,\n    requestId: reqId\n  };\n};\n\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Wrap the Authenticator app with a MessagePort interface.\n * @constructor\n * @private\n */\nu2f.WrappedAuthenticatorPort_ = function() {\n  this.requestId_ = -1;\n  this.requestObject_ = null;\n}\n\n/**\n * Launch the Authenticator intent.\n * @param {Object} message\n */\nu2f.WrappedAuthenticatorPort_.prototype.postMessage = function(message) {\n  var intentUrl =\n    u2f.WrappedAuthenticatorPort_.INTENT_URL_BASE_ +\n    ';S.request=' + encodeURIComponent(JSON.stringify(message)) +\n    ';end';\n  document.location = intentUrl;\n};\n\n/**\n * Tells what type of port this is.\n * @return {String} port type\n */\nu2f.WrappedAuthenticatorPort_.prototype.getPortType = function() {\n  return \"WrappedAuthenticatorPort_\";\n};\n\n\n/**\n * Emulates the HTML 5 addEventListener interface.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedAuthenticatorPort_.prototype.addEventListener = function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message') {\n    var self = this;\n    /* Register a callback to that executes when\n     * chrome injects the response. */\n    window.addEventListener(\n        'message', self.onRequestUpdate_.bind(self, handler), false);\n  } else {\n    console.error('WrappedAuthenticatorPort only supports message');\n  }\n};\n\n/**\n * Callback invoked  when a response is received from the Authenticator.\n * @param function({data: Object}) callback\n * @param {Object} message message Object\n */\nu2f.WrappedAuthenticatorPort_.prototype.onRequestUpdate_ =\n    function(callback, message) {\n  var messageObject = JSON.parse(message.data);\n  var intentUrl = messageObject['intentURL'];\n\n  var errorCode = messageObject['errorCode'];\n  var responseObject = null;\n  if (messageObject.hasOwnProperty('data')) {\n    responseObject = /** @type {Object} */ (\n        JSON.parse(messageObject['data']));\n  }\n\n  callback({'data': responseObject});\n};\n\n/**\n * Base URL for intents to Authenticator.\n * @const\n * @private\n */\nu2f.WrappedAuthenticatorPort_.INTENT_URL_BASE_ =\n  'intent:#Intent;action=com.google.android.apps.authenticator.AUTHENTICATE';\n\n/**\n * Wrap the iOS client app with a MessagePort interface.\n * @constructor\n * @private\n */\nu2f.WrappedIosPort_ = function() {};\n\n/**\n * Launch the iOS client app request\n * @param {Object} message\n */\nu2f.WrappedIosPort_.prototype.postMessage = function(message) {\n  var str = JSON.stringify(message);\n  var url = \"u2f://auth?\" + encodeURI(str);\n  location.replace(url);\n};\n\n/**\n * Tells what type of port this is.\n * @return {String} port type\n */\nu2f.WrappedIosPort_.prototype.getPortType = function() {\n  return \"WrappedIosPort_\";\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedIosPort_.prototype.addEventListener = function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name !== 'message') {\n    console.error('WrappedIosPort only supports message');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      callback(channel.port1);\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n};\n\n\n//High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(port) {\n        u2f.port_ = port;\n        u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(u2f.port_);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  var hasCalledBack = false;\n  function reply(value) {\n    if (hasCalledBack)\n      return;\n    hasCalledBack = true;\n    callback(value);\n  }\n  u2f.getApiVersion(\n    function (response) {\n      js_api_version = response['js_api_version'] === undefined ? 0 : response['js_api_version'];\n      reply(true);\n    }\n  );\n  // No response from extension within 1500ms -> no support\n  setTimeout(reply.bind(null, false), 1500);\n};\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * If the JS API version supported by the extension is unknown, it first sends a\n * message to the extension to find out the supported API version and then it sends\n * the sign request.\n * @param {string=} appId\n * @param {string=} challenge\n * @param {Array<u2f.RegisteredKey>} registeredKeys\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(appId, challenge, registeredKeys, callback, opt_timeoutSeconds) {\n  if (js_api_version === undefined) {\n    // Send a message to get the extension to JS API version, then send the actual sign request.\n    u2f.getApiVersion(\n        function (response) {\n          js_api_version = response['js_api_version'] === undefined ? 0 : response['js_api_version'];\n          console.log(\"Extension JS API Version: \", js_api_version);\n          u2f.sendSignRequest(appId, challenge, registeredKeys, callback, opt_timeoutSeconds);\n        });\n  } else {\n    // We know the JS API version. Send the actual sign request in the supported API version.\n    u2f.sendSignRequest(appId, challenge, registeredKeys, callback, opt_timeoutSeconds);\n  }\n};\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {string=} appId\n * @param {string=} challenge\n * @param {Array<u2f.RegisteredKey>} registeredKeys\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sendSignRequest = function(appId, challenge, registeredKeys, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(port) {\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var timeoutSeconds = (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC);\n    var req = u2f.formatSignRequest_(appId, challenge, registeredKeys, timeoutSeconds, reqId);\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * If the JS API version supported by the extension is unknown, it first sends a\n * message to the extension to find out the supported API version and then it sends\n * the register request.\n * @param {string=} appId\n * @param {Array<u2f.RegisterRequest>} registerRequests\n * @param {Array<u2f.RegisteredKey>} registeredKeys\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(appId, registerRequests, registeredKeys, callback, opt_timeoutSeconds) {\n  if (js_api_version === undefined) {\n    // Send a message to get the extension to JS API version, then send the actual register request.\n    u2f.getApiVersion(\n        function (response) {\n          js_api_version = response['js_api_version'] === undefined ? 0: response['js_api_version'];\n          console.log(\"Extension JS API Version: \", js_api_version);\n          u2f.sendRegisterRequest(appId, registerRequests, registeredKeys,\n              callback, opt_timeoutSeconds);\n        });\n  } else {\n    // We know the JS API version. Send the actual register request in the supported API version.\n    u2f.sendRegisterRequest(appId, registerRequests, registeredKeys,\n        callback, opt_timeoutSeconds);\n  }\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {string=} appId\n * @param {Array<u2f.RegisterRequest>} registerRequests\n * @param {Array<u2f.RegisteredKey>} registeredKeys\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sendRegisterRequest = function(appId, registerRequests, registeredKeys, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(port) {\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var timeoutSeconds = (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC);\n    var req = u2f.formatRegisterRequest_(\n        appId, registeredKeys, registerRequests, timeoutSeconds, reqId);\n    port.postMessage(req);\n  });\n};\n\n\n/**\n * Dispatches a message to the extension to find out the supported\n * JS API version.\n * If the user is on a mobile phone and is thus using Google Authenticator instead\n * of the Chrome extension, don't send the request and simply return 0.\n * @param {function((u2f.Error|u2f.GetJsApiVersionResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.getApiVersion = function(callback, opt_timeoutSeconds) {\n u2f.getPortSingleton_(function(port) {\n   // If we are using Android Google Authenticator or iOS client app,\n   // do not fire an intent to ask which JS API version to use.\n   if (port.getPortType) {\n     var apiVersion;\n     switch (port.getPortType()) {\n       case 'WrappedIosPort_':\n       case 'WrappedAuthenticatorPort_':\n         apiVersion = 1.1;\n         break;\n\n       default:\n         apiVersion = 0;\n         break;\n     }\n     callback({ 'js_api_version': apiVersion });\n     return;\n   }\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_GET_API_VERSION_REQUEST,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n          opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n"],"sourceRoot":""}